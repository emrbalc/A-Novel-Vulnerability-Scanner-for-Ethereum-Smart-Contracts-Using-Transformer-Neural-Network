using OpenQA.Selenium.Chrome;

namespace Services {
    public class BytecodeOperation { 
        public async Task SaveBytecodeList() { 
            List<string> contractAddresses = ReadAddressFromExcel();
            HttpClient httpClient = new HttpClient();
            string uri;
            HttpResponseMessage response = new HttpResponseMessage();
            string excelPath = @"C:\Users\anilu\Desktop\bytecodess.xlsx";
            Microsoft.Office.Interop.Excel.Application excel = new Microsoft.Office.Interop.Excel.Application();
            Workbook wb;
            Worksheet ws;
            wb = excel.Workbooks.Open(excelPath);
            ws = (Worksheet)wb.Worksheets[1];
            BytecodeEntity bytecodeEntity; 
            int i = 0;
            int newRow;
            foreach (var address in contractAddresses) {
                i++;
                uri = string.Format("https://api.etherscan.io/api?module=proxy&action=eth_getCode&address={0}&apikey={1}", address, "72BANAGY51BE8TWY3PT3XV16UJJF2D8M5Q");
                response = await httpClient.GetAsync(uri);
                bytecodeEntity = JsonConvert.DeserializeObject<BytecodeEntity>(await response.Content.ReadAsStringAsync()); 
                newRow = ws.Range["A" + ws.Rows.Count, Type.Missing]
                               .End[Microsoft.Office.Interop.Excel.XlDirection.xlUp].Row + 1;
                ws.Cells[newRow, 1] = address;
                ws.Cells[newRow, 2] = bytecodeEntity.result; 
                wb.Save();
                if (i == 100) {
                    await Task.Delay(5000);
                }
            }
            wb.Close();
        }
    }
}
